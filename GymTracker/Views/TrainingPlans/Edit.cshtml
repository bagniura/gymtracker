@model GymTracker.Models.TrainingPlan

@{
    ViewData["Title"] = "Edit Training Plan";
}

<h1>Edit Training Plan</h1>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="UserId" class="control-label">User</label>
        <select asp-for="UserId" class="form-control" asp-items="ViewBag.Users"></select>
    </div>
    <div id="exercises-list">
              @if (Model.ExercisePlans != null && Model.ExercisePlans.Count > 0)
              {
                  @for (int i = 0; i < Model.ExercisePlans.Count; i++)
                  {
                      <div class="form-group">
                          <label>Exercise</label>
                          <select asp-for="@Model.ExercisePlans[i].ExerciseId" class="form-control" asp-items="ViewBag.Exercises"></select>
                          <input asp-for="@Model.ExercisePlans[i].Sets" class="form-control" />
                          <input asp-for="@Model.ExercisePlans[i].Repetitions" class="form-control" />
                          <input asp-for="@Model.ExercisePlans[i].Weight" class="form-control" />
                      </div>
                  }
              }
              else
              {
                  <p>No exercises added to this plan yet.</p>
              }
    </div>
        
    <button type="button" onclick="addExercise()" class="btn btn-secondary">Add Exercise</button>

    <button type="submit" class="btn btn-success">Save</button>
    <br><a asp-action="Index">Back to List</a></br>

</form>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
            function addExercise() {
                var index = $("#exercises-list").children().length;
                var exercises = @Html.Raw(Json.Serialize(ViewBag.Exercises));
                var selectHtml = exercises.reduce((acc, exercise) => {
                    return acc + `<option value="${exercise.value}">${exercise.text}</option>`;
                }, '');
                
                var newItem = `<div class="form-group">
                    <label for="Exercises_${index}__ExerciseId" class="control-label">Exercise</label>
                    <select name="Exercises[${index}].ExerciseId" class="form-control">${selectHtml}</select>
                    <input name="Exercises[${index}].Repetitions" class="form-control" placeholder="Repetitions"/>
                    <input name="Exercises[${index}].Sets" class="form-control" placeholder="Sets"/>
                    <input name="Exercises[${index}].Weight" class="form-control" placeholder="Weight"/>
                </div>`;
                $("#exercises-list").append(newItem);
            }
        </script>

}